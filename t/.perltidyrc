# общее
--standard-error-output	  # ошибки в поток stderr
--quiet                   # и вообще не болтать лишнего
--maximum-line-length=110 # максимальная длинна строки
--check-syntax            # проверять синтаксис во входящем и отфильтрованном потоках
--output-line-ending=unix # всегда UNIX переносы строк

# отступы
# -et=4                       # Табы в качестве отступов, шириной в 4 пробела (иначе - пробелы)
--indent-columns=4            # отступы в начале строки
--continuation-indentation=4  # отступ для продолжений длинных строк, разбитых на несколько
--closing-token-indentation=0 # располагать закрывающие скобки )]} без дополнительного отступа
--nooutdent-long-lines        # не сдвигать длинные литералы и комментарии вправо

# пробелы
--paren-tightness=2           # добавлять пробелы внутри круглых скобок при длинных индексах
--square-bracket-tightness=1  # добавлять пробелы внутри квадратных скобок при длинных индексах
--brace-tightness=2           # добавлять пробелы внутри фигурных скобок при длинных индексах
--block-brace-tightnes=1      # добавлять пробелы внутри блоков кода при длинных индексах
--nospace-for-semicolon       # без пробелов перед ; в for цикле
--add-semicolons              # добавлять ; к последней линии процедуры
--trim-qw                     # выравнивание многострочных qw// конструкции
--nospace-after-keyword="err" # не добавлять пробелы после следующих функций

# комментарии
--minimum-space-to-comment=4   # комментарии в конце строки с кодом отодвигаются вправо на 4
--hanging-side-comments        # выравнивать комментарии в конце строк
--static-block-comments        # комментарии начинающиеся с ## не обрабатываются
--format-skipping              # текст между format-skipping-begin и format-skipping-end
--format-skipping-begin="#<<<" # не будет обрабатывать perltidy
--format-skipping-end="#>>>"

-asc    # Добавлять отсутствующую точку с запятой
-aws    # Добавлять пробелы для лучшей читаемости

# переносы строк
--cuddled-else
-nbl                           # { на той же строке что и оператор:  if ($a) {
-nsbl                          # { на той же строке что и функция: sub bla {
-nasbl                         # { на той же строке что и замыканик sub {
--vertical-tightness=0         # не добавлять переносы строк после ({[ в длинных строках
--vertical-tightness-closing=0 # добавлять переносы строк перед )}] в длинных строках
--add-newlines                 # разрешить tidy добавлять свои переносы
--stack-opening-tokens
--opening-hash-brace-right

-nicp
-nst    # Не выводить в STDOUT
-b      # Бекапить оригинальные файлы

--noblanks-before-comments          # не добавлять пустую строку перед комментом
--blanks-before-subs                # добавлять пустую строку перед sub
--blanks-before-blocks              # добавлять пустую строку перед длинными блоками
--long-block-line-count=8           # (если блок длиннее 8 строк)
--maximum-consecutive-blank-lines=2 # в коде вообще не более 2 пустых строк подряд
--keep-old-blank-lines=1            # сохранять пользовательские пустые строки
--maximum-consecutive-blank-lines=2 #   если их не больше 2

# Обязательный пробел перед нижеследующими операторами
-wbb="% + - * / x != == >= <= =~ < > | & **= += *= &= <<= &&= -= /= |= >>= ||= .= %= ^= x="
